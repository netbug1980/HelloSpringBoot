/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'leisen' at '16-12-9 下午10:33' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'application'

version = '1.0.0-SNAPSHOT'
ext {
	Timestamp = new Date().format('yyyyMMddHHmm')
	BuildNumber = System.getenv("BUILD_NUMBER")
	if(null == BuildNumber || "" == BuildNumber){
		BuildNumber = 'x';
	}

}
/*map.each{key,value -> 
 println key + ':' + value
 }*/
println Timestamp
println BuildNumber
println projectDir
println project.version

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

springBoot { mainClass = 'com.cdv.spring.MyApplication' }

distributions {
	//发布时包括config下的内容
	main {
		contents {
			from ("${projectDir}/config") { into "config" }
		}
	}
}

jar.doFirst {
	manifest {
		def manifestFile = "${projectDir}/META-INF/MANIFEST.MF"
		if(new File(manifestFile).exists())
			from (manifestFile)
		attributes 'Implementation-Title':project.name
		if(project.version.endsWith('-SNAPSHOT')){
			attributes 'Implementation-Version':project.version + project.ext.Timestamp
		}else{
			attributes 'Implementation-Version':project.version
		}
		attributes 'Implementation-BuildDateTime':new Date()
	}
}

javadoc {
	options {
		encoding 'UTF-8'
		charSet 'UTF-8'
		author false
		version true
		links 'http://docs.oracle.com/javase/8/docs/api/index.html'
		memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PRIVATE//让javadoc中包含私有内容?
	}
}

buildscript {
	repositories { mavenCentral() }
	dependencies {classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE' }
}

// In this section you declare where to find the dependencies of your project
repositories {
	// Use 'jcenter' for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	// jcenter()
	mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	// The production code uses the SLF4J logging API at compile time
	compile 'org.slf4j:slf4j-api:1.7.21'
	compile 'org.springframework.boot:spring-boot-starter-web:1.4.0.RELEASE'
	compile 'org.aspectj:aspectjweaver:1.8.9'
	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
	testCompile 'junit:junit:4.12'
	testCompile 'org.springframework.boot:spring-boot-starter-test:1.4.0.RELEASE'
}
